syntax = "proto3";

import 'timestamp.proto';

enum Radio {
    R0 = 0;
    R1 = 1;
}

enum Spreading {
    UNDEFINED = 0;
    SF7 = 1;
    SF8 = 2;
    SF9 = 3;
    SF10 = 4;
    SF11 = 5;
    SF12 = 6;
}

enum Bandwidth {
    UNDEFINED = 0;
    BW7_8kHz = 1;
    BW15_6kHz = 2;
    BW31_2kHz = 3;
    BW62_5kHz = 4;
    BW125kHz = 5;
    BW250kHz = 6;
    BW500kHz = 7;
}
enum Coderate {
    UNDEFINED = 0;
    CR4_5 = 1;
    CR4_6 = 2;
    CR4_7 = 3;
    CR4_8 = 4;
}

message Req {
    uint32 id = 1;
    oneof kind {
        TxReq tx = 2;
    }
}

message Resp {
    uint32 id = 1;
    oneof kind {
        TxResp tx = 2;
        RxPacket rx_packet = 3;
        bytes parse_err = 4;
    }
}

message TxReq {
    // Center frequency to transmit on.
    uint32 freq = 1;
    // Which radio to transmit on.
    Radio radio = 2;
    // TX power (in dBm).
    int32 power = 3;
    // Modulation bandwidth.
    Bandwidth bandwidth = 4;
    // Spreading factor to use with this packet.
    Spreading spreading = 5;
    // Error-correcting-code of the packet.
    Coderate coderate = 6;
    // Invert signal polarity for orthogonal downlinks.
    bool invert_polarity = 7;
    // Do not send a CRC in the packet.
    bool omit_crc = 8;
    // Enable implicit header mode.
    bool implicit_header = 9;
    // Arbitrary user-defined payload to transmit.
    bytes payload = 10;
}

message Timestamp {
  // Represents seconds of UTC time since Unix epoch
  // 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
  // 9999-12-31T23:59:59Z inclusive.
  int64 seconds = 1;

  // Non-negative fractions of a second at nanosecond resolution. Negative
  // second values with fractions must still have non-negative nanos values
  // that count forward in time. Must be from 0 to 999,999,999
  // inclusive.
  int32 nanos = 2;
}

message RxPacket {
    // Center frequency of the channel this packet was received on.
    uint32 freq = 1;
    // Channel this packet packet was received on.
    uint32 if_chain = 2;
    // Status of CRC check.
    bool crc_check = 3;
    // Indicates wheter or not the following timestamp is:
    // - GPS-based (2 uS accuracy)
    // - system time (unknown accuracy)
    bool timestamp_is_gps = 4;
    // Either a GPS-based or system timestamp.
    google.protobuf.Timestamp timestamp = 5;
    // RF chain this packet was received on.
    Radio radio = 6;
    // Modulation bandwidth.
    Bandwidth bandwidth = 7;
    // Spreading factor of this packet.
    Spreading spreading  = 8;
    // Error Correcting Code rate of this packet.
    Coderate coderate = 9;
    // Average packet RSSI in dB.
    float rssi = 10;
    // Average packet SNR, in dB.
    float snr = 11;
    // This packet's payload.
    bytes payload = 12;
}

message TxResp {
    bool success = 1;
}
